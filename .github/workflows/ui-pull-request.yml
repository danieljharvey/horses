# This is a basic workflow to help you get started with Actions

name: UI - build

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the trunk branch
on:
  pull_request:
    branches:
      - trunk
    paths:
      - "ui/**"

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # working folder
    env:
      working-directory: ui
      
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v3
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install everything
        run: cd ui && yarn

      - name: Check formatting
        run: cd ui && yarn prettier

      - name: Typecheck everything
        run: cd ui && yarn tsc

      - name: Run tests
        run: cd ui && yarn test

      - name: Build shit
        run: cd ui && yarn build

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      
      - name: Build
        id: docker_build
        uses: docker/build-push-action@v3
        with:
          push: false
          context: ui/.
          tags: danieljamesharvey/mimsa-ui:latest
      
      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
