name: Compiler - build

on:
  push:
    branches:
      - trunk
    paths:
      - "benchmarks/**"
      - "builder/**"
      - "compiler/**"
      - "repl/**"
      - "core/**"
      - "backends/**"
      - "cabal.project"
      - "cabal.project.freeze"

  pull_request:
    branches:
      - trunk
    paths:
      - "benchmarks/**"
      - "builder/**"
      - "compiler/**"
      - "repl/**"
      - "core/**"
      - "backends/**"
      - "cabal.project"
      - "cabal.project.freeze"

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4

      - name: Cache cabal global package db
        id: cabal-global
        uses: actions/cache@v3
        with:
          path: ~/.cabal
          key: ${{ runner.os }}-2-cabal-global-${{ matrix.plan.ghc }}-${{ hashFiles('**.freeze') }}
          restore-keys: |
            ${{ runner.os }}-2-cabal-global-${{ matrix.plan.ghc }}

      - name: Cache cabal-installed programs in ~/.local/bin
        id: cabal-programs
        uses: actions/cache@v3
        with:
          path: ~/.cabal/bin
          key: ${{ runner.os }}-2-cabal-programs-${{ matrix.plan.ghc }}-${{ hashFiles('**.freeze') }}
          restore-keys: |
            ${{ runner.os }}-2-cabal-programs-${{ matrix.plan.ghc }}

      - name: Cache .cabal-work
        uses: actions/cache@v3
        with:
          path: dist-newstyle
          key: ${{ runner.os }}-2-cabal-work-${{ matrix.plan.ghc }}-${{ hashFiles('**.freeze') }}
          restore-keys: |
            ${{ runner.os }}-2-cabal-work-${{ matrix.plan.ghc }}

      - uses: haskell-actions/setup@v2
        with:
          ghc-version: '9.6.2'
          cabal-version: '3.10.1.0'

      - name: Build all things
        run: make build

  test:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4

      - uses: actions/setup-node@v4
        with:
          node-version: 19

      - uses: haskell-actions/setup@v2
        with:
          ghc-version: '9.6.2'
          cabal-version: '3.10.1.0'

      - name: Cache cabal global package db
        id: cabal-global
        uses: actions/cache@v3
        with:
          path: ~/.cabal
          key: ${{ runner.os }}-2-cabal-global-${{ matrix.plan.ghc }}-${{ hashFiles('**.freeze') }}
          restore-keys: |
            ${{ runner.os }}-2-cabal-global-${{ matrix.plan.ghc }}

      - name: Cache .cabal-work
        uses: actions/cache@v3
        with:
          path: dist-newstyle
          key: ${{ runner.os }}-2-cabal-work-${{ matrix.plan.ghc }}-${{ hashFiles('**.freeze') }}
          restore-keys: |
            ${{ runner.os }}-2-cabal-work-${{ matrix.plan.ghc }}

      - name: Cache cabal-installed programs in ~/.local/bin
        id: cabal-programs
        uses: actions/cache@v3
        with:
          path: ~/.cabal/bin
          key: ${{ runner.os }}-2-cabal-programs-${{ matrix.plan.ghc }}-${{ hashFiles('**.freeze') }}
          restore-keys: |
            ${{ runner.os }}-2-cabal-programs-${{ matrix.plan.ghc }}

      - name: Cabal update
        run: cabal update

      - name: Test core
        run: make test-core

      - name: Test backends
        run: make test-backends

      - name: Test compiler
        run: yarn global add typescript@4.4 ts-node@10.9.1 & make test

  bench:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4

      - uses: haskell-actions/setup@v2
        with:
          ghc-version: '9.6.2'
          cabal-version: '3.10.1.0'

      - name: Cache cabal global package db
        id: cabal-global
        uses: actions/cache@v3
        with:
          path: ~/.cabal
          key: ${{ runner.os }}-2-cabal-global-${{ matrix.plan.ghc }}-${{ hashFiles('**.freeze') }}
          restore-keys: |
            ${{ runner.os }}-2-cabal-global-${{ matrix.plan.ghc }}

      - name: Cache cabal-installed programs in ~/.local/bin
        id: cabal-programs
        uses: actions/cache@v3
        with:
          path: ~/.cabal/bin
          key: ${{ runner.os }}-2-cabal-programs-${{ matrix.plan.ghc }}-${{ hashFiles('**.freeze') }}
          restore-keys: |
            ${{ runner.os }}-2-cabal-programs-${{ matrix.plan.ghc }}

      - name: Cache .cabal-work
        uses: actions/cache@v3
        with:
          path: dist-newstyle
          key: ${{ runner.os }}-2-cabal-work-${{ matrix.plan.ghc }}-${{ hashFiles('**.freeze') }}
          restore-keys: |
            ${{ runner.os }}-2-cabal-work-${{ matrix.plan.ghc }}

      - name: Run benchmarks
        run: make bench

      - name: Create benchmark file
        run: |
          jq '.[2] | map({name: .reportName, unit: "Time (ms)", value: .reportAnalysis.anRegress[0].regCoeffs.iters.estPoint })' benchmarks/performance.json | tee sorted-results.json

      # Download previous benchmark result from cache (if exists)
      - name: Download previous benchmark data
        uses: actions/cache@v3
        with:
          path: ./cache
          key: ${{ runner.os }}-benchmark

      # Run `github-action-benchmark` action
      - name: Store benchmark result
        uses: benchmark-action/github-action-benchmark@v1
        with:
          # What benchmark tool the output.txt came from
          tool: 'customSmallerIsBetter'
          # Where the output from the benchmark tool is stored
          output-file-path: sorted-results.json
          # Where the previous data file is stored
          external-data-json-path: ./cache/benchmark-data.json
          # Workflow will fail when an alert happens
          fail-on-alert: true
          # GitHub API token to make a commit comment
          github-token: ${{ secrets.GITHUB_TOKEN }}
          # Enable alert commit comment
          comment-on-alert: true
          # Mention @danieljharvey in the commit comment
          alert-comment-cc-users: '@danieljharvey'
