name: Compiler - build

on:
  push:
    branches:
      - trunk
    paths:
      - "compiler/**"

  pull_request:
    branches:
      - trunk
    paths:
      - "compiler/**"

jobs:
  ormolu:
    env:
      working-directory: compiler
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: mrkkrp/ormolu-action@v4

  build:
    needs: ormolu
    env:
      working-directory: compiler
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Cache stack global package db
        id: stack-global
        uses: actions/cache@v3
        with:
          path: ~/.stack
          key: ${{ runner.os }}-1-stack-global-${{ matrix.plan.ghc }}-${{ hashFiles('**.yaml') }}
          restore-keys: |
            ${{ runner.os }}-1-stack-global-${{ matrix.plan.ghc }}

      - name: Cache stack-installed programs in ~/.local/bin
        id: stack-programs
        uses: actions/cache@v3
        with:
          path: ~/.local/bin
          key: ${{ runner.os }}-1-stack-programs-${{ matrix.plan.ghc }}-${{ hashFiles('**.yaml') }}
          restore-keys: |
            ${{ runner.os }}-1-stack-programs-${{ matrix.plan.ghc }}

      - name: Cache .stack-work
        uses: actions/cache@v3
        with:
          path: compiler/.stack-work
          key: ${{ runner.os }}-1-stack-work-${{ matrix.plan.ghc }}-${{ hashFiles('**.yaml') }}
          restore-keys: |
            ${{ runner.os }}-1-stack-work-${{ matrix.plan.ghc }}

      - name: "Set up HLint"
        uses: rwe/actions-hlint-setup@v1
        with:
          version: "3.1.6"

      - name: "Run HLint"
        uses: rwe/actions-hlint-run@v2
        with:
          path: compiler/src/
          fail-on: warning

      - name: Run stack test
        run: yarn global add typescript@4.4 ts-node@10.4.0 & cd compiler && make test 

      - name: Run stack build
        run: cd compiler && make build 

      - name: Run stack bench
        run: cd compiler && make bench 

      - name: Generate swagger json
        run: cd compiler && stack exec mimsa-server generate-swagger
