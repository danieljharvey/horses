type Nat    = Suc Nat | Zero;

let loop as b =
  match as with 
      (Zero) -> 
        b
    | (Suc as2) -> 
        (incrementInt (loop as2 b));

\as ->
  \b ->
    match as with 
        (Zero) -> 
          b
      | (Suc as2) -> 
          (incrementInt (loop as2 b)) (Suc (Suc (Suc (Zero)))) 10